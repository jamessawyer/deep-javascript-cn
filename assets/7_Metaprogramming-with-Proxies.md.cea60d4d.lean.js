import{_ as s,c as a,o as n,a as l}from"./app.d0a0f41b.js";const C=JSON.parse('{"title":"Proxy元编程","description":"","frontmatter":{"title":"Proxy元编程"},"headers":[{"level":2,"title":"1️⃣ 概览（Overview）","slug":"_1️⃣-概览-overview","link":"#_1️⃣-概览-overview","children":[]},{"level":2,"title":"2️⃣ 编程 vs 元编程","slug":"_2️⃣-编程-vs-元编程","link":"#_2️⃣-编程-vs-元编程","children":[{"level":3,"title":"2.1 元编程的种类","slug":"_2-1-元编程的种类","link":"#_2-1-元编程的种类","children":[]}]},{"level":2,"title":"3️⃣ ⭐代理解释","slug":"_3️⃣-⭐代理解释","link":"#_3️⃣-⭐代理解释","children":[{"level":3,"title":"3.1 一个示例","slug":"_3-1-一个示例","link":"#_3-1-一个示例","children":[]},{"level":3,"title":"3.2 ⭐ 函数专有的陷阱","slug":"_3-2-⭐-函数专有的陷阱","link":"#_3-2-⭐-函数专有的陷阱","children":[]},{"level":3,"title":"3.3 拦截方法调用","slug":"_3-3-拦截方法调用","link":"#_3-3-拦截方法调用","children":[]},{"level":3,"title":"3.4 ⭐ 可撤销的代理","slug":"_3-4-⭐-可撤销的代理","link":"#_3-4-⭐-可撤销的代理","children":[]},{"level":3,"title":"3.5 代理作为原型","slug":"_3-5-代理作为原型","link":"#_3-5-代理作为原型","children":[]},{"level":3,"title":"3.6 转发拦截的操作","slug":"_3-6-转发拦截的操作","link":"#_3-6-转发拦截的操作","children":[]},{"level":3,"title":"3.7 ⭐ 缺陷：不是所有的对象都可以被代理透明包装","slug":"_3-7-⭐-缺陷-不是所有的对象都可以被代理透明包装","link":"#_3-7-⭐-缺陷-不是所有的对象都可以被代理透明包装","children":[]}]},{"level":2,"title":"4️⃣ 代理使用示例","slug":"_4️⃣-代理使用示例","link":"#_4️⃣-代理使用示例","children":[{"level":3,"title":"4.1 用get & set追踪属性访问","slug":"_4-1-用get-set追踪属性访问","link":"#_4-1-用get-set追踪属性访问","children":[]},{"level":3,"title":"4.2 访问未知属性进行警告","slug":"_4-2-访问未知属性进行警告","link":"#_4-2-访问未知属性进行警告","children":[]},{"level":3,"title":"4.3 负数组索引（get trap）","slug":"_4-3-负数组索引-get-trap","link":"#_4-3-负数组索引-get-trap","children":[]},{"level":3,"title":"4.4 数据绑定（set trap）","slug":"_4-4-数据绑定-set-trap","link":"#_4-4-数据绑定-set-trap","children":[]},{"level":3,"title":"4.5 访问restful网络服务（method calls）","slug":"_4-5-访问restful网络服务-method-calls","link":"#_4-5-访问restful网络服务-method-calls","children":[]},{"level":3,"title":"4.6 ⭐ 可撤销引用","slug":"_4-6-⭐-可撤销引用","link":"#_4-6-⭐-可撤销引用","children":[]},{"level":3,"title":"4.7 使用js实现DOM","slug":"_4-7-使用js实现dom","link":"#_4-7-使用js实现dom","children":[]},{"level":3,"title":"4.8 更多使用场景","slug":"_4-8-更多使用场景","link":"#_4-8-更多使用场景","children":[]},{"level":3,"title":"4.9 使用代理的库","slug":"_4-9-使用代理的库","link":"#_4-9-使用代理的库","children":[]}]},{"level":2,"title":"5️⃣ 📚Proxy API的设计思想","slug":"_5️⃣-📚proxy-api的设计思想","link":"#_5️⃣-📚proxy-api的设计思想","children":[{"level":3,"title":"5.1 分层：保持基础级别和元级别分离","slug":"_5-1-分层-保持基础级别和元级别分离","link":"#_5-1-分层-保持基础级别和元级别分离","children":[]},{"level":3,"title":"5.2 虚拟对象 vs 包装器","slug":"_5-2-虚拟对象-vs-包装器","link":"#_5-2-虚拟对象-vs-包装器","children":[]},{"level":3,"title":"5.3 透明虚拟化和handler封装","slug":"_5-3-透明虚拟化和handler封装","link":"#_5-3-透明虚拟化和handler封装","children":[]},{"level":3,"title":"5.4 ⭐️ 元对象协议和代理traps","slug":"_5-4-⭐️-元对象协议和代理traps","link":"#_5-4-⭐️-元对象协议和代理traps","children":[]},{"level":3,"title":"5.5 对代理强制不变性","slug":"_5-5-对代理强制不变性","link":"#_5-5-对代理强制不变性","children":[]}]},{"level":2,"title":"6️⃣ Proxy问答：enumerate 陷阱去哪里了？","slug":"_6️⃣-proxy问答-enumerate-陷阱去哪里了","link":"#_6️⃣-proxy问答-enumerate-陷阱去哪里了","children":[]},{"level":2,"title":"7️⃣ Proxy API 手册","slug":"_7️⃣-proxy-api-手册","link":"#_7️⃣-proxy-api-手册","children":[{"level":3,"title":"7.1 创建代理","slug":"_7-1-创建代理","link":"#_7-1-创建代理","children":[]},{"level":3,"title":"7.2 Handler方法","slug":"_7-2-handler方法","link":"#_7-2-handler方法","children":[]},{"level":3,"title":"7.3 handler方法的不变性","slug":"_7-3-handler方法的不变性","link":"#_7-3-handler方法的不变性","children":[]},{"level":3,"title":"7.4 影响原型链的操作","slug":"_7-4-影响原型链的操作","link":"#_7-4-影响原型链的操作","children":[]},{"level":3,"title":"7.5 Reflect","slug":"_7-5-reflect","link":"#_7-5-reflect","children":[]}]},{"level":2,"title":"8️⃣ 总结","slug":"_8️⃣-总结","link":"#_8️⃣-总结","children":[]}],"relativePath":"7/Metaprogramming-with-Proxies.md","lastUpdated":1677749232000}'),p={name:"7/Metaprogramming-with-Proxies.md"},o=l("",356),e=[o];function t(c,r,y,F,D,i){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
